name: Github Action CI Demo

on:
  push:
    branches: [ feature/demo ]
  pull_request:
    branches: [ main ]

# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:

    - uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        pytest --cov=./ --cov-report=xml

    - name: Upload coverage to codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true
        verbose: true

  publish-git-package:
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - uses: actions/checkout@v2

      - name: Publish to github package
        uses: DrSkunk/gp-docker-action@1.1.9
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          image-name: gh-action-demo
          image-tag: ${{ github.sha }}

  publish-docker-registry:
    runs-on: ubuntu-latest
    needs: [ build ]

    steps:
      - uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: asksmruti/demo-${{ github.sha }}

  deploy-to-dev:
    runs-on: ubuntu-latest
    needs: [ publish-git-package, publish-docker-registry ]

    steps:
      - uses: actions/checkout@v2

      - name: Deploy to Heroku
        uses: jctaveras/heroku-deploy@v2.1.3
        id: heroku
        with:
          email: ${{ secrets.HEROKU_EMAIL }}
          api_key: ${{ secrets.HEROKU_API_KEY }}
          app_name: 'gh-demo-ss'
          dockerfile_path: '.' # set the path to the folder where the Dockerfile is located
          formation: 'gh-demo-web'
